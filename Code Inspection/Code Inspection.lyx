#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Software Engineering 2: Ofbiz Code Inspection 
\end_layout

\begin_layout Author
Andrea Pace, Lorenzo Petrangeli, Tommaso Paulon
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The purpose of this document is to highlight all the errors, the imprecisions
 overlooked during the implementation phase by sistematically inspect the
 code and verifying that the code is compliant with the checklist provided
 fo this phase of the project.
 
\end_layout

\begin_layout Section
Assigned class
\end_layout

\begin_layout Standard
We have to perform code inspection on the EntityAutoEngine class, whose
 path is /apache-ofbiz-16.11.01/framework/service/src/main/java/org/apache/ofbiz/s
ervice/engine/EntityAutoEngine.java
\end_layout

\begin_layout Standard
We refer to the Code Inspection Assignment Task Description.pdf file for
 what concerns the issues to be found.
\end_layout

\begin_layout Subsection
Functional role of the class
\end_layout

\begin_layout Standard
The EntityAutoEngine implements Create, Update, Delete and Expire operation
 depending on what is present in the parameters of the runSync method.
 According to the discussion found at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://ofbiz.135035.n4.nabble.com/The-fancy-new-entity-auto-service-execution-engine
-td197201.html
\end_layout

\end_inset

, this class is mainly an entity manager, these four operations check if
 the right conditions are met before they can actually create/delete/update
 the entity.
 No direct usages of this class can be found by our Java IDE, so we suppose
 that this class is part of some kind of pattern and objects are generated
 at runtime.
 The lack of documentation/javadoc of this class allows for this kind of
 hypothesis, since the documentation is largely missing not only in this
 class but also in the class that is extended by our class.
 The only javadoc found is in the GenericEngine interface, at the top of
 the extend/implement chain, but it's not sufficient to clearly understand
 the role of our class.
 There are some comments within our class with some example of XML code:
 according to the discussion found at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://ofbiz.135035.n4.nabble.com/entity-auto-td157361.html
\end_layout

\end_inset

, these are example of correct XML example to be used with respect to the
 different requests(create/delete/update/expire).
 
\end_layout

\begin_layout Section
List of issues found by applying the checklist
\end_layout

\begin_layout Standard
We are going to report the issues found in the code following the checklist.
\end_layout

\begin_layout Itemize

\emph on
11.
 All if, while, do-while, try-catch, and for statements that have only one
 statement to execute are surrounded by curly braces
\emph default
: lines 549, 552, 556, 558, 562, 567
\end_layout

\begin_layout Itemize

\emph on
13.
 Where practical, line length does not exceed 80 characters:
\emph default
 lines 55, 96, 97, 160, 162, 181, 226, 270, 276, 284, 293, 294, 295, 296,
 381, 393, 462, 488, 495, 509, 526, 554, 556.
\end_layout

\begin_layout Itemize

\emph on
14.
 When line length must exceed 80 characters, it does NOT exceed 120 characters:
\emph default
 lines 53, 60(javadoc), 63,
\emph on
 
\emph default
68(javadoc), 71, 72, 79, 83, 88, 102, 115, 119, 123, 130, 141, 142, 148,
 192, 231, 236, 238, 245, 249, 271, 273, 290, 291, 300, 335, 343, 345, 351,
 367, 383, 386, 403, 413, 419, 426, 429, 430, 433, 437, 463, 469, 478, 490,
 496, 500, 502, 519, 528, 530, 550, 558, 562.
\end_layout

\begin_layout Itemize

\emph on
18.
 Comments are used to adequately explain what the class, interface, methods,
 and blocks of code are doing: 
\emph default
the comments are unsufficient to explain what the class and the methods
 do.
 Line 47: not a complete or detailed description of the class.
 Line 181: comment used to highlight that the else branch is useless and
 should be deleted.
 Every method lacks proper documentation, while some block of code has little
 comments.
\end_layout

\begin_layout Itemize

\emph on
19.
 Commented out code contains a reason for being commented out and a date
 it can be removed from the source file if determined it is no longer needed:
 
\emph default
line 391.
 Some commented XML code is present but it's not meant to be executed, it
 can be considered as a standard comment
\end_layout

\begin_layout Itemize

\shape italic
23.
 Check that the javadoc is complete (i.e., it covers all classes and files
 part of the set of classes assigned to you)
\shape default
: the methods on lines 148,367,478 haven't got any javadoc.
\end_layout

\begin_layout Itemize

\shape italic
27.
 Check that the code is free of duplicates, long methods, big classes, breaking
 encapsulation, as well as if coupling and cohesion are adequate
\shape default
:
\series bold
 invokeCreate 
\series default
(lines 148-375) is a very long method based only on the if/else construction.
 Even if its functionality is guaranteed, this method could have been written
 in a more elegant and clear way.
\end_layout

\begin_layout Itemize

\shape italic
33.
 Declarations appear at the beginning of blocks (A block is any code surrounded
 by curly braces ‘{’ and ‘}’).
 The exception is a variable can be declared in a for loop
\shape default
: 
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
crudValue 
\series default
(line 135) is not declared at the beginning of his block 
\end_layout

\begin_layout Itemize

\series bold
lookedUpValue
\series default
 (line 236) is not declared at the beginning of his block 
\end_layout

\begin_layout Itemize

\series bold
fromDateField
\series default
 (line 301) is not declared at the beginning of his block previous
\end_layout

\begin_layout Itemize

\series bold
previousStatus
\series default
 (line 351) is not declared at the beginning of his block 
\end_layout

\begin_layout Itemize

\series bold
lookedUpValue
\series default
 (line 386) is not declared at the beginning of his block 
\end_layout

\begin_layout Itemize
variables declared on lines 400-402 are not at the beginning of the block
 
\end_layout

\begin_layout Itemize

\series bold
lookedUpValue
\series default
 (line 500) is not declared at the beginning of his block 
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
41.
 Check that displayed output is free of spelling and grammatical errors:
 
\series bold
\shape default
party
\series default
 on line 296 probably is a spelling error and stands for 
\series bold
part
\series default
.
\end_layout

\begin_layout Itemize

\shape italic
44.
 Check that the implementation avoids “brutish programming”: 
\series bold
\shape default
invokeCreate 
\series default
(lines 148-375) as written above is very long and the if/else construction
 is abused.
 The term 
\shape italic
“brutish programming” 
\shape default
refers to 
\begin_inset Quotes eld
\end_inset

solutions where someone applies an obvious but excessive technique when
 more refined and effective alternatives are available
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 and surely can be used to describe the implementation of this method.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

http://users.csc.calpoly.edu/~jdalbey/SWE/CodeSmells/bonehead.html
\end_layout

\end_body
\end_document
